{
  "$schema": "http://json-schema.org/schema#",
  "additionalProperties": false,
  "description": "Pod Security Policy Spec defines the policy enforced.",
  "properties": {
    "allowPrivilegeEscalation": {
      "description": "AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "allowedCapabilities": {
      "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "type": [
        "array",
        "null"
      ]
    },
    "allowedHostPaths": {
      "description": "is a white list of allowed host paths. Empty indicates that all host paths may be used.",
      "items": {
        "$ref": "https://patthomasrick.github.io/kubernetes-json-schema/v1.8.15/_definitions.json#/definitions/io.k8s.api.extensions.v1beta1.AllowedHostPath"
      },
      "type": [
        "array",
        "null"
      ]
    },
    "defaultAddCapabilities": {
      "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "type": [
        "array",
        "null"
      ]
    },
    "defaultAllowPrivilegeEscalation": {
      "description": "DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "fsGroup": {
      "$ref": "https://patthomasrick.github.io/kubernetes-json-schema/v1.8.15/_definitions.json#/definitions/io.k8s.api.extensions.v1beta1.FSGroupStrategyOptions",
      "description": "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext."
    },
    "hostIPC": {
      "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "hostNetwork": {
      "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "hostPID": {
      "description": "hostPID determines if the policy allows the use of HostPID in the pod spec.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "hostPorts": {
      "description": "hostPorts determines which host port ranges are allowed to be exposed.",
      "items": {
        "$ref": "https://patthomasrick.github.io/kubernetes-json-schema/v1.8.15/_definitions.json#/definitions/io.k8s.api.extensions.v1beta1.HostPortRange"
      },
      "type": [
        "array",
        "null"
      ]
    },
    "privileged": {
      "description": "privileged determines if a pod can request to be run as privileged.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "readOnlyRootFilesystem": {
      "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "requiredDropCapabilities": {
      "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "type": [
        "array",
        "null"
      ]
    },
    "runAsUser": {
      "$ref": "https://patthomasrick.github.io/kubernetes-json-schema/v1.8.15/_definitions.json#/definitions/io.k8s.api.extensions.v1beta1.RunAsUserStrategyOptions",
      "description": "runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set."
    },
    "seLinux": {
      "$ref": "https://patthomasrick.github.io/kubernetes-json-schema/v1.8.15/_definitions.json#/definitions/io.k8s.api.extensions.v1beta1.SELinuxStrategyOptions",
      "description": "seLinux is the strategy that will dictate the allowable labels that may be set."
    },
    "supplementalGroups": {
      "$ref": "https://patthomasrick.github.io/kubernetes-json-schema/v1.8.15/_definitions.json#/definitions/io.k8s.api.extensions.v1beta1.SupplementalGroupsStrategyOptions",
      "description": "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext."
    },
    "volumes": {
      "description": "volumes is a white list of allowed volume plugins.  Empty indicates that all plugins may be used.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "type": [
        "array",
        "null"
      ]
    }
  },
  "required": [
    "seLinux",
    "runAsUser",
    "supplementalGroups",
    "fsGroup"
  ],
  "type": "object"
}
